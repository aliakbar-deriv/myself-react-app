name: Deploy Staging
on:
  push:
    branches:
      - main

# Ensure only one staging deployment can run at a time
concurrency:
  group: staging
  cancel-in-progress: false

env:
  NODE_ENV: staging
  HUSKY: 0
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  quality:
    name: Quality Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup environment
        uses: ./.github/actions/setup-environment
      
      - name: Run quality assurance checks
        uses: ./.github/actions/quality-checks

  staging:
    name: Deploy Staging
    needs: quality
    runs-on: ubuntu-latest
    permissions:
      deployments: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup environment
        uses: ./.github/actions/setup-environment
        
      - name: Deploy to Vercel
        id: deploy
        uses: ./.github/actions/deploy/vercel/staging
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          sha: ${{ github.sha }}

      - name: Generate app ID
        id: generate-app-id
        uses: ./.github/actions/generate-app-id

      - name: Prepare preview URL
        id: preview-url
        uses: ./.github/actions/prepare-preview-url
        with:
          deployment-url: ${{ steps.deploy.outputs.deployment-url }}
          app-id: ${{ steps.generate-app-id.outputs.app-id }}

      - name: Update deployment status
        uses: ./.github/actions/deployment-status
        with:
          environment: 'Staging'
          deployment-url: ${{ steps.preview-url.outputs.url }}
          sha: ${{ github.sha }}
          status: 'success'
          description: 'âœ¨ Staging deployment completed'
